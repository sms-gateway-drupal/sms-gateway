<?php

/**
 * @file
 * Install, update, uninstall functions for the sms_gateway.
 */

/**
 * Implements hook_requirements().
 */
function sms_gateway_requirements($phase) {
  $requirements = array();
  $t = get_t();
  $curl_available = function_exists('curl_init');

  if (!$curl_available) {
    $requirements['sms_gateway'] = array(
      'title' => $t('cURL'),
      'value' => $t('Not found'),
      'severity' => REQUIREMENT_ERROR,
      'description' => $t("SMS gateway requires the PHP <a href='!curl_url'>cURL</a> library.", array('!curl_url' => 'http://php.net/manual/en/curl.setup.php')),
    );
  }

  return $requirements;
}

/**
 * Implements hook_schema().
 */
function sms_gateway_schema() {
  $schema['sms_gateway_config'] = array(
    'description' => 'Stores sms_gateway per user config settings.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique config ID.',
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "Creator user's {users}.uid",
      ),
      'username' => array(
        'type' => 'varchar',
        'length' => 254,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Smsgateway.me username.',
      ),
      'password' => array(
        'type' => 'varchar',
        'length' => 254,
        'not null' => TRUE,
        'default' => '',
        'description' => "Smsgateway.me password (hashed).",
      ),
      'device' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'normal',
        'description' => 'Smsgateway.me default sending device ID.',
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'uid' => array('uid'),
    ),
  );

  return $schema;
}
