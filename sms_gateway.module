<?php

/**
 * @file
 * Module file for sms gateway.
 */

module_load_include('inc', 'sms_gateway', 'sms_gateway.helpers');

/**
 * Implements hook_help().
 */
function sms_gateway_help($path, $arg) {
  global $base_url;
  global $base_path;
  global $user;

  $uid = $user->uid;
  $config_path = 'user/' . $uid . '/sms-gateway/config';
  $config_url = $base_url . $base_path . $config_path;

  switch ($path) {
    case 'admin/help#sms_gateway':
      $output = '';
      $output .= '<p>' . t('The sms gateway module provides a drupal web interface for your sms transactions on your mobile phone with the use of the services provided by smsgateway.me.') . '</p>';
      $output .= '<p>' . t('This includes per user configuration, sending messages, retrieving messages, managing contacts, group messaging, bulk messaging, and other things you can do with sms in your mobile phone.') . '</p>';
      $output .= '<p>' . t('The maintainers of the this module are not in any way affiliated with smsgateway.me.') . '</p>';
      $output .= '<h2>' . t('Installation') . '</h2>';
      $output .= '<ul>';
      $output .= '<li>' . t('Create account in <a href="@url" target="_blank">@url</a>.', array('@url' => 'https://smsgateway.me/')) . '</li>';
      $output .= '<li>' . t('Download and install <b>@name</b> on your mobile phone and sign-in to your account.', array('@name' => 'SMS Gateway Me')) . '</li>';
      $output .= '<li>' . t('Install and enable <b>@name</b> module into your drupal website.', array('@name' => 'SMS Gateway')) . '</li>';
      $output .= '<li>' . t('Set username (your @account email) and password <a href="@config_url" target="_blank">@config_path</a>.',
        array(
          '@account' => 'smsgateway.me',
          '@config_path' => $config_path,
          '@config_url' => $config_url,
        )) . '</li>';
      $output .= '</ul>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function sms_gateway_menu() {
  // Config.
  $items['admin/config/sms-gateway'] = array(
    'title' => 'SMS gateway',
    'page callback' => 'sms_gateway_config_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'weight' => 0,
  );
  $items['admin/config/sms-gateway/config'] = array(
    'title' => 'Config',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  // Devices.
  $items['admin/config/sms-gateway/config/edit'] = array(
    'title' => 'Edit',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/config/sms-gateway/config/devices'] = array(
    'title' => 'Devices',
    'page callback' => 'sms_gateway_devices_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );

  // Messages.
  $items['admin/sms'] = array(
    'title' => 'SMS',
    'page callback' => 'sms_gateway_message_list_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
  );
  $items['admin/sms/message'] = array(
    'title' => 'Messages',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/sms/message/manage'] = array(
    'title' => 'Messages',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/sms/message/manage/1'] = array(
    'title' => 'Message detail',
    'page callback' => 'sms_gateway_message_detail_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/sms/message/manage/1/view'] = array(
    'title' => 'Message detail',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/sms/message/manage/1/delete'] = array(
    'title' => 'Delete message detail',
    'page callback' => 'sms_gateway_message_delete_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
  );
  $items['admin/sms/message/send'] = array(
    'title' => 'Send message',
    'page callback' => 'sms_gateway_message_send_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  // Messages redirects.
  $items['admin/sms/send'] = array(
    'title' => 'Send message',
    'page callback' => 'sms_gateway_send_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'weight' => 0,
  );
  $items['admin/sms/messages'] = array(
    'title' => 'Messages',
    'page callback' => 'sms_gateway_messages_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'weight' => 10,
  );

  // Contacts.
  $items['admin/sms/contact'] = array(
    'title' => 'Contacts',
    'page callback' => 'sms_gateway_contact_list_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'weight' => '20',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/sms/contact/manage'] = array(
    'title' => 'Contacts',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/sms/contact/manage/1'] = array(
    'title' => 'Contact detail',
    'page callback' => 'sms_gateway_contact_detail_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
  );
  $items['admin/sms/contact/manage/1/view'] = array(
    'title' => 'Contact detail',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/sms/contact/manage/1/edit'] = array(
    'title' => 'Edit contact detail',
    'page callback' => 'sms_gateway_contact_edit_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
  );
  $items['admin/sms/contact/manage/1/delete'] = array(
    'title' => 'Delete contact detail',
    'page callback' => 'sms_gateway_contact_delete_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
  );
  $items['admin/sms/contact/add'] = array(
    'title' => 'Add contact',
    'page callback' => 'sms_gateway_contact_add_page',
    'access arguments' => array('administer sms gateway'),
    'file' => 'sms_gateway.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
  );

  return $items;
}

/**
 * Implements hook_entity_info().
 */
function sms_gateway_entity_info() {
  $return = array(
    'sms_gateway_config' => array(
      'label' => t('Sms gateway config'),
      'plural label' => t('Sms gateway configs'),
      'description' => t('Sms gateway configurations.'),
      'controller class' => 'EntityAPIController',
      'base table' => 'sms_gateway_config',
      'entity keys' => array('id' => 'id'),
    ),
  );

  return $return;
}

/**
 * Loads an sms_gateway_config entity.
 *
 * @param int $id
 *   The ID of the sms_gateway_config entity.
 * @param bool $reset
 *   Whether to reset the cache.
 *
 * @return object|false
 *   The loaded sms_gateway_config; otherwise FALSE.
 */
function sms_gateway_config_load($id, $reset = FALSE) {
  $configs = sms_gateway_config_load_multiple(array($id), array(), $reset);
  return reset($configs);
}

/**
 * Loads multiple sms_gateway_config entities by ID or based on conditions.
 *
 * @param array|false $ids
 *   Array of sms_gateway_config IDs or FALSE.
 * @param array $conditions
 *   Array of conditions to filter with.
 * @param bool $reset
 *   Whether to reset the cache.
 *
 * @return array|false
 *   Array of sms_gateway_config entities.
 */
function sms_gateway_config_load_multiple($ids, array $conditions = array(), $reset = FALSE) {
  return entity_load('sms_gateway_config', $ids, $conditions, $reset);
}

/**
 * Loads the sms_gateway_config entity by an account.
 *
 * @param object $account
 *   The account to use.
 *
 * @return object|false
 *   The loaded sms_gateway_config entity; otherwise, FALSE.
 */
function sms_gateway_config_load_by_user($account) {
  $configs = sms_gateway_config_load_multiple(FALSE, array('uid' => $account->uid));
  return reset($configs);
}

/**
 * Creates a new sms_gateway_config entity.
 *
 * @param object $account
 *   The account to use.
 *
 * @return object|false
 *   An sms_gateway_config entity.
 */
function sms_gateway_config_create($account) {
  return entity_get_controller('sms_gateway_config')->create(array(
    'uid' => $account->uid,
    'username' => '',
    'password' => '',
    'device' => 0,
  ));
}

/**
 * Saves an sms_gateway_config entity.
 *
 * @param object $config
 *   The config to save.
 *
 * @return int
 *   Either the status SAVED_NEW or SAVED_UPDATED.
 */
function sms_gateway_config_save($config) {
  return entity_get_controller('sms_gateway_config')->save($config);
}
